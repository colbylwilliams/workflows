name: Get Environment Configuration

on:
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      name:
        description: 'The name of the environment'
        value: ${{ jobs.env_config.outputs.name }}
      type:
        description: 'The type of the environment'
        value: ${{ jobs.env_config.outputs.type }}
      project_name:
        description: 'The name of the project'
        value: ${{ jobs.env_config.outputs.project_name }}
      project_group:
        description: 'The name of the project resource group'
        value: ${{ jobs.env_config.outputs.project_group }}

env:
  # format: ci-[branch|pr]-[branch name|pr number]-suffex
  ENVIRONMENT_NAME: ci-${{ github.event_name == 'pull_request' && 'pr' || 'branch' }}-${{ github.event_name == 'pull_request' && github.event.number || github.event_name == 'push' && github.ref_name || github.event.ref }}-${{ github.event.repository.id }}

  # branch/Pull request  | Environment Type
  # ---------------------------------------
  # dev/feature branches | Dev
  # feature -> dev PRs   | Test
  # dev -> main PRs      | Pre-Prod
  # main branch          | Prod
  ENVIRONMENT_TYPE: ${{ github.event_name == 'push' && (github.event.ref == 'refs/heads/main' && 'Prod' || 'Dev') || github.event_name == 'pull_request' && (github.event.pull_request.base.ref == 'main' && 'Pre-Prod' || 'Test') || 'Dev' }}

jobs:
  env_config:
    name: Get Environment Configuration
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      name: ${{ steps.get_config.outputs.name }}
      type: ${{ steps.get_config.outputs.type }}
      project_name: ${{ steps.get_config.outputs.project_name }}
      project_group: ${{ steps.get_config.outputs.project_group }}

    steps:
      - run: echo "- ${{ env.ENVIRONMENT_TYPE }}" >> $GITHUB_STEP_SUMMARY
      - run: echo "- ${{ env.ENVIRONMENT_NAME }}" >> $GITHUB_STEP_SUMMARY

      - id: get_config
        shell: python
        run: |
          project_name = '${{ secrets.PROJECT_NAME }}'
          project_group = '${{ secrets.PROJECT_RESOURCE_GROUP }}'
          env_name = '${{ env.ENVIRONMENT_NAME }}'
          env_type = '${{ env.ENVIRONMENT_TYPE }}'

          print("::set-output name=name::{}".format(env_name))
          print("::set-output name=type::{}".format(env_type))
          print("::set-output name=project_name::{}".format(project_name))
          print("::set-output name=project_group::{}".format(project_group))
